/** @type {import('tailwindcss').Config} */
export default {
  content: ["./index.html", "./src/**/*.{html,js,ts,tsx}"],
  theme: {
    extend: {
      boxShadow: {
        DEFAULT: `1px 1px 0px var(--color-scrim),
                2px 2px 0px var(--color-scrim),
                3px 3px 0px var(--color-scrim),
                4px 4px 0px var(--color-scrim),
                5px 5px 0px var(--color-scrim),
                6px 6px 0px var(--color-scrim);`,
      },
      fontFamily: {
        sans: ["Roboto Mono", "serif"],
      },
      colors: {
        primary: "var(--color-primary)",
        "surface-tint": "var(--color-surfaceTint)",
        "on-primary": "var(--color-onPrimary)",
        "primary-container": "var(--color-primaryContainer)",
        "on-primary-container": "var(--color-onPrimaryContainer)",
        secondary: "var(--color-secondary)",
        "on-secondary": "var(--color-onSecondary)",
        "secondary-container": "var(--color-secondaryContainer)",
        "on-secondary-container": "var(--color-onSecondaryContainer)",
        tertiary: "var(--color-tertiary)",
        "on-tertiary": "var(--color-onTertiary)",
        "tertiary-container": "var(--color-tertiaryContainer)",
        "on-tertiary-container": "var(--color-onTertiaryContainer)",
        error: "var(--color-error)",
        "on-error": "var(--color-onError)",
        "error-container": "var(--color-errorContainer)",
        "on-error-container": "var(--color-onErrorContainer)",
        background: "var(--color-background)",
        "on-background": "var(--color-onBackground)",
        surface: "var(--color-surface)",
        "on-surface": "var(--color-onSurface)",
        "surface-variant": "var(--color-surfaceVariant)",
        "on-surface-variant": "var(--color-onSurfaceVariant)",
        outline: "var(--color-outline)",
        "outline-variant": "var(--color-outlineVariant)",
        shadow: "var(--color-shadow)",
        scrim: "var(--color-scrim)",
        "inverse-surface": "var(--color-inverseSurface)",
        "inverse-on-surface": "var(--color-inverseOnSurface)",
        "inverse-primary": "var(--color-inversePrimary)",
        "primary-fixed": "var(--color-primaryFixed)",
        "on-primary-fixed": "var(--color-onPrimaryFixed)",
        "primary-fixed-dim": "var(--color-primaryFixedDim)",
        "on-primary-fixed-variant": "var(--color-onPrimaryFixedVariant)",
        "secondary-fixed": "var(--color-secondaryFixed)",
        "on-secondary-fixed": "var(--color-onSecondaryFixed)",
        "secondary-fixed-dim": "var(--color-secondaryFixedDim)",
        "on-secondary-fixed-variant": "var(--color-onSecondaryFixedVariant)",
        "tertiary-fixed": "var(--color-tertiaryFixed)",
        "on-tertiary-fixed": "var(--color-onTertiaryFixed)",
        "tertiary-fixed-dim": "var(--color-tertiaryFixedDim)",
        "on-tertiary-fixed-variant": "var(--color-onTertiaryFixedVariant)",
        "surface-dim": "var(--color-surfaceDim)",
        "surface-bright": "var(--color-surfaceBright)",
        "surface-container-lowest": "var(--color-surfaceContainerLowest)",
        "surface-container-low": "var(--color-surfaceContainerLow)",
        "surface-container": "var(--color-surfaceContainer)",
        "surface-container-high": "var(--color-surfaceContainerHigh)",
        "surface-container-highest": "var(--color-surfaceContainerHighest)",
      },
    },
  },
  plugins: [],
};
